{"version":3,"sources":["logo.svg","Assignment.js","App.js","reportWebVitals.js","index.js"],"names":["Assignment","useState","data","setdata","value","setValue","arry","setarry","hash","setHash","useEffect","fetch","then","res","text","resp","console","log","type","id","name","onChange","e","target","placeholder","onClick","str","num","strArr","split","map","forEach","word","hasOwnProperty","frequencyArr","Object","keys","key","sort","a","b","temp","slice","el","findMostFrequent","Table","striped","bordered","hover","item","index","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAAe,I,qBCwEAA,MArEf,WACQ,IADa,EAEQC,mBAAS,IAFjB,mBAENC,EAFM,KAEDC,EAFC,OAGUF,mBAAS,GAHnB,mBAGNG,EAHM,KAGAC,EAHA,OAISJ,mBAAS,IAJlB,mBAINK,EAJM,KAIDC,EAJC,OAKUN,mBAAS,IALnB,mBAKNO,EALM,KAKDC,EALC,KAyCjB,OAnCIC,qBAAU,WACNC,MAAM,sEACLC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,OAAOF,MAAK,SAAAG,GAE5BZ,EAAQY,GACRC,QAAQC,IAAIb,GACZY,QAAQC,IAAIf,WAIb,IA0BF,eAAC,WAAD,WACI,uBACA,uBAAOgB,KAAK,SAASC,GAAG,OAAOC,KAAK,QAAQC,SAAU,SAACC,GAAD,OAAKjB,EAASiB,EAAEC,OAAOnB,QAAQoB,YAAY,oBACjG,uBACA,uBAAK,wBAAQC,QA7Bf,YAI2B,WAAwB,IAAvBC,EAAsB,uDAAhB,GAAIC,EAAY,uDAAN,EAChCC,EAASF,EAAIG,MAAM,KACnBC,EAAI,GACVF,EAAOG,SAAQ,SAAAC,GACTF,EAAIG,eAAeD,GACnBF,EAAIE,KAEJF,EAAIE,GAAQ,KAGlB,IAAME,EAAeC,OAAOC,KAAKN,GAAKA,KAAI,SAAAO,GAAG,MAAI,CAACA,EAAKP,EAAIO,OAC3DrB,QAAQC,IAAIiB,GACZA,EAAaI,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAE,GAAKD,EAAE,MACrC9B,EAAQqB,GAChB,IAAMW,EAAMP,EAAaQ,MAAM,EAAGf,GAAKG,KAAI,SAAAa,GAAE,OAAIA,EAAG,MACpDpC,EAAQkC,GAGHG,CAAiB1C,EAAKE,IAOlB,wBAEL,uBAAK,uBACL,cAACyC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,SACI,kCACI,+BACI,yDACD,0CAGC1C,EAAKwB,KAAI,SAACmB,EAAKC,GAAN,OACL,+BACJ,6BAAK1C,EAAKyC,KACF,6BAAKA,MAFAC,e,MC3CtBC,MAXf,WAEE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCESC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3C,MAAK,YAAkD,IAA/C4C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.61c2b3f0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import react,{Fragment,useEffect,useState} from 'react'\r\nimport {Table} from 'react-bootstrap'\r\n\r\nfunction Assignment(){\r\n        const maper = [];\r\n        const [data,setdata]=useState(\"\");\r\n        const [value,setValue]=useState(0);\r\n        const [arry,setarry]= useState([]);\r\n        const [hash,setHash] = useState([]);\r\n        useEffect(()=>{\r\n            fetch(\"https://raw.githubusercontent.com/invictustech/test/main/README.md\")\r\n            .then(res=>res.text().then(resp=>{\r\n              \r\n           setdata(resp);\r\n           console.log(value);\r\n           console.log(data);\r\n          \r\n\r\n           }));\r\n        },[])\r\n          function result()\r\n        {\r\n            \r\n           \r\n            const findMostFrequent = (str = '', num = 1) => {\r\n                const strArr = str.split(' ');\r\n                const map={};\r\n                strArr.forEach(word => {\r\n                   if(map.hasOwnProperty(word)){\r\n                      map[word]++;\r\n                   }else{\r\n                      map[word] = 1;\r\n                   }\r\n                });\r\n                const frequencyArr = Object.keys(map).map(key => [key, map[key]]);\r\n                console.log(frequencyArr);\r\n                frequencyArr.sort((a, b) => b[1] - a[1]);\r\n                setHash(map);\r\n        const temp= frequencyArr.slice(0, num).map(el => el[0]);\r\n        setarry(temp);\r\n             };\r\n\r\n             findMostFrequent(data,value);\r\n          }\r\n    return(\r\n        <Fragment>\r\n            <br/>\r\n            <input type=\"number\" id=\"ajay\" name=\"input\" onChange={(e)=>setValue(e.target.value)} placeholder=\"Enter the value\"/>\r\n            <br/>\r\n            <br/><button onClick={result}>Fetch data</button>\r\n\r\n            <br/><br/>\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Frequency of occureence</th>\r\n                       <th>Words</th>\r\n                    </tr>\r\n                    {\r\n                        arry.map((item,index)=>\r\n                            <tr key={index}>\r\n                        <td>{hash[item]}</td>\r\n                                <td>{item}</td>\r\n                              \r\n                            </tr>\r\n                        )\r\n                    }\r\n                </thead>\r\n            </Table>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default Assignment;","import logo from './logo.svg';\n\nimport Assignment from './Assignment'\n\nimport './App.css';\n\nfunction App() {\n  \n  return (\n    <div className=\"App\"> \n      <Assignment />\n\n\n    </div>   \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}